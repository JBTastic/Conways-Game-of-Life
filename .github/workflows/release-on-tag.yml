name: Build and Release on Tag

on:
    push:
        tags:
            - "v*.*.*" # reacts to tags like v1.0.0, v2.1.3, etc.

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      osname: linux
                      arch: amd64
                      ext: ""
                    - os: windows-latest
                      osname: windows
                      arch: amd64
                      ext: ".exe"
                    - os: macos-latest
                      osname: darwin
                      arch: amd64
                      ext: ""
                    - os: macos-latest
                      osname: darwin
                      arch: arm64
                      ext: ""

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            # Linux: install SDL2 from apt
            - name: Install SDL2 on Linux
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev zip tar

            # macOS: install SDL2 via brew
            - name: Install SDL2 on macOS
              if: matrix.os == 'macos-latest'
              run: |
                  brew install sdl2 sdl2_ttf sdl2_image

            # Windows: install SDL2 via vcpkg
            - name: Install vcpkg and SDL2 on Windows
              if: matrix.os == 'windows-latest'
              shell: pwsh
              run: |
                  git clone https://github.com/microsoft/vcpkg.git
                  ./vcpkg/bootstrap-vcpkg.bat
                  ./vcpkg/vcpkg install sdl2 sdl2-ttf sdl2-image
                  echo "VCPKG_ROOT=$PWD/vcpkg" >> $env:GITHUB_ENV

            - name: Build binary
              run: |
                  BIN_NAME="conways-game-of-life${{ matrix.ext }}"

                  if [[ "${{ matrix.osname }}" == "linux" ]]; then
                    g++ -std=c++17 *.cpp -o "$BIN_NAME" -lSDL2 -lSDL2_ttf -lSDL2_image
                  elif [[ "${{ matrix.osname }}" == "darwin" ]]; then
                    clang++ -std=c++17 *.cpp -o "$BIN_NAME" -lSDL2 -lSDL2_ttf -lSDL2_image
                  elif [[ "${{ matrix.osname }}" == "windows" ]]; then
                    ./vcpkg/vcpkg integrate install
                    x86_64-w64-mingw32-g++ -std=c++17 *.cpp -o "$BIN_NAME" -I"$VCPKG_ROOT/installed/x64-windows/include" -L"$VCPKG_ROOT/installed/x64-windows/lib" -lSDL2 -lSDL2_ttf -lSDL2_image
                  fi

                  chmod +x "$BIN_NAME" || true

                  ARCHIVE_NAME="conways-game-of-life-${{ matrix.osname }}-${{ matrix.arch }}"

                  if [[ "${{ matrix.osname }}" == "linux" || "${{ matrix.osname }}" == "darwin" ]]; then
                    tar -czf "${ARCHIVE_NAME}.tar.gz" "$BIN_NAME"
                  elif [[ "${{ matrix.osname }}" == "windows" ]]; then
                    powershell Compress-Archive -Path "$BIN_NAME" -DestinationPath "${ARCHIVE_NAME}.zip"
                  fi

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: conways-game-of-life-${{ matrix.osname }}-${{ matrix.arch }}
                  path: |
                      conways-game-of-life-${{ matrix.osname }}-${{ matrix.arch }}.tar.gz
                      conways-game-of-life-${{ matrix.osname }}-${{ matrix.arch }}.zip

    release:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  path: ./artifacts

            - name: Create GitHub Release
              id: create_release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ github.ref_name }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload release assets
              run: |
                  for dir in ./artifacts/*; do
                    file=$(find "$dir" -type f | head -n 1)
                    echo "Uploading $file"
                    gh release upload ${{ github.ref_name }} "$file"
                  done
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
